version: 2.1

orbs:
  node: circleci/node@6.1.0

jobs:
  build-and-analyze:
    docker:
      - image: cimg/node:18.17
    steps:
      - checkout

      # Install Frontend dependencies
      - run:
          name: Install Frontend dependencies
          command: cd Frontend && npm ci

      # Install Backend dependencies
      - run:
          name: Install Backend dependencies
          command: cd Backend && npm ci

      # Software Composition Analysis (SCA) - Frontend
      - run:
          name: Frontend npm audit
          command: cd Frontend && npm audit --audit-level=moderate || true

      # Software Composition Analysis (SCA) - Backend
      - run:
          name: Backend npm audit
          command: cd Backend && npm audit --audit-level=moderate || true

      # API testing (basic smoke test)
      - run:
          name: Backend API smoke test
          command: |
            cd Backend
            if [ -f scripts/smoke-test.js ]; then
              node scripts/smoke-test.js || true
            else
              echo "No smoke-test.js found, skipping API test"
            fi

      # Static Application Security Testing (SAST) - SonarCloud scan using local CLI
      - run:
          name: SonarCloud Scan
          command: |
            # Install SonarScanner CLI locally
            npm install -g sonar-scanner@4.8.0.2856
            chmod +x $(which sonar-scanner)

            # If coverage files exist, set them; otherwise skip
            LCOV_PATHS=""
            [ -f Frontend/coverage/lcov.info ] && LCOV_PATHS="Frontend/coverage/lcov.info"
            [ -f Backend/coverage/lcov.info ] && LCOV_PATHS="$LCOV_PATHS,Backend/coverage/lcov.info"

            sonar-scanner \
              -Dsonar.login=$SONAR_TOKEN \
              -Dsonar.projectBaseDir=. \
              -Dsonar.sources=Frontend,Backend \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.sourceEncoding=UTF-8 \
              ${LCOV_PATHS:+-Dsonar.javascript.lcov.reportPaths=$LCOV_PATHS} \
              -Dsonar.verbose=true

workflows:
  build_and_analyze:
    jobs:
      - build-and-analyze
